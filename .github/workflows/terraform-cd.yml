# .github/workflows/terraform-cd.yml
name: ðŸš€ Terraform CD - Automated Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  TF_VERSION: "1.5.0"
  AWS_REGION: "us-east-1"

jobs:
  deploy-dev:
    name: ðŸ”§ Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    
    steps:
    - name: ðŸ“¥ Checkout code
      uses: actions/checkout@v4
      
    - name: ðŸ”§ Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        terraform_wrapper: false
        
    - name: ðŸ”‘ Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: ðŸ”§ Terraform Init
      run: |
        echo "ðŸ”§ Initializing Terraform for DEV environment..."
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=environments/dev/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}" \
          -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"
          
    - name: ðŸ“‹ Terraform Plan
      run: |
        echo "ðŸ“‹ Creating deployment plan for DEV..."
        terraform plan \
          -var-file="environments/dev/dev.tfvars" \
          -out=dev.tfplan
          
    - name: ðŸš€ Terraform Apply
      run: |
        echo "ðŸš€ Deploying to DEV environment..."
        terraform apply -auto-approve dev.tfplan
        
        echo "ðŸ“Š Getting deployment outputs..."
        terraform output
        
        echo "âœ… DEV deployment completed successfully!"