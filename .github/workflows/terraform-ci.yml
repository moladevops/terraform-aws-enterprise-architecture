# .github/workflows/terraform-ci.yml
name: 🔍 Terraform CI - Tests & Validation

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  TF_VERSION: "1.5.0"
  AWS_REGION: "us-east-1"

jobs:
  security-and-quality:
    name: 🛡️ Security & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: 🔍 Terraform Format Check
      run: |
        echo "🎨 Checking Terraform formatting..."
        terraform fmt -check -recursive || {
          echo "❌ Code is not properly formatted!"
          echo "Run 'terraform fmt -recursive' to fix formatting"
          exit 1
        }
        echo "✅ Code formatting is correct!"
        
    - name: 🔍 Terraform Validate
      run: |
        echo "🔧 Initializing Terraform..."
        terraform init -backend=false
        
        echo "✅ Validating Terraform configuration..."
        terraform validate
        
        echo "✅ All validation checks passed!"

  terraform-plan:
    name: 📋 Terraform Plan
    runs-on: ubuntu-latest
    needs: security-and-quality
    
    strategy:
      matrix:
        environment: [dev, staging, prod]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: 🔑 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: 🔧 Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=environments/${{ matrix.environment }}/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}" \
          -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"
          
    - name: 📋 Terraform Plan
      run: |
        echo "📋 Creating plan for ${{ matrix.environment }}..."
        terraform plan \
          -var-file="environments/${{ matrix.environment }}/${{ matrix.environment }}.tfvars" \
          -no-color

  notify-results:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [security-and-quality, terraform-plan]
    if: always()
    
    steps:
    - name: 📢 Notify Success
      if: needs.security-and-quality.result == 'success' && needs.terraform-plan.result == 'success'
      run: |
        echo "🎉 All CI checks passed successfully!"
        echo "✅ Security scan: PASSED"
        echo "✅ Terraform validation: PASSED"
        echo "✅ Multi-environment plans: PASSED"
        echo "🚀 Ready for deployment!"
        
    - name: 📢 Notify Failure
      if: needs.security-and-quality.result == 'failure' || needs.terraform-plan.result == 'failure'
      run: |
        echo "❌ CI checks failed!"
        echo "🔧 Please fix the issues before merging"
        exit 1